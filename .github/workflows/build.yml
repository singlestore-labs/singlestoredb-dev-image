name: build

on:
  schedule:
    - cron: "0 0 * * *"

  push:
    paths-ignore:
      - "CHANGELOG.md"
      - "LICENSE"
      - "README.md"

env:
  BOOTSTRAP_LICENSE: ${{ secrets.BOOTSTRAP_LICENSE }}
  SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}

jobs:
  build-and-test-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: prepare build environment
        run: echo "CONFIG="$(cat config.json)"" >> ${GITHUB_ENV}

      - name: Build image for testing
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            singlestore-labs/singlestoredb-dev
          build-args: |
            BOOTSTRAP_LICENSE=${{ secrets.BOOTSTRAP_LICENSE }}
            CONFIG=${{ env.CONFIG }}

      - name: run tests
        run: |
          ./test/test.sh singlestore-labs/singlestoredb-dev

      - uses: anchore/scan-action/download-grype@v3
        id: grype

      - name: scan Docker image
        run: |
          ${{steps.grype.outputs.cmd}} --only-fixed singlestore-labs/singlestoredb-dev

  publish-image:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest

    needs:
      - build-and-test-image

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: prepare build environment
        run: echo "CONFIG="$(cat config.json)"" >> ${GITHUB_ENV}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ghcr.io/singlestore-labs/singlestoredb-dev
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.vendor=SingleStore

      - name: Build and publish image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BOOTSTRAP_LICENSE=${{ secrets.BOOTSTRAP_LICENSE }}
            CONFIG=${{ env.CONFIG }}

  test-service:
    runs-on: ubuntu-latest
    needs:
      - publish-image

    services:
      singlestoredb:
        image: ghcr.io/singlestore-labs/singlestoredb-dev:latest
        ports:
          - 3306:3306
          - 8080:8080
          - 9000:9000
        env:
          ROOT_PASSWORD: test
          SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}

    steps:
      - name: sanity check using mysql client
        run: |
          mysql -u root -ptest -e "SELECT 1" -h 127.0.0.1
